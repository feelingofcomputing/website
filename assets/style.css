/* Globals */
:root {
  color-scheme: light dark;

  --white: hsl(160, 29%, 97%);
  --green: hsl(160, 100%, 40%);
  --grey: hsl(160, 100%, 30%);
  --black: hsl(160, 85%, 5%);

  --fg: light-dark(var(--black), var(--white));
  --bg: light-dark(var(--white), var(--black));
}

/* Resets */
* { box-sizing:border-box }

/* Fonts */
h1   { font: 300 32px / 32px sans-serif; }
h2   { font: 300 24px / 27px sans-serif; }
h3   { font: 300 20px / 25px sans-serif; }
h4   { font: 300 16px / 24px sans-serif; }
body { font: 400 16px / 24px sans-serif; }
h5   { font: 500 14px / 21px sans-serif; }
h6   { font: 500 12px / 18px sans-serif; }

/* Structural elements */

html {
  /* Long words may be broken and wrapped. (NB: this doesn't affect min-content lengths) */
  overflow-wrap: break-word;

  /* Prevent iPhone Safari and Android Firefox from inflating text when the phone is landscape. */
  -webkit-text-size-adjust: none;
  -moz-text-size-adjust: none;
  text-size-adjust: none;

  /* Reserve space for a scroll bar */
  scrollbar-gutter: stable;
}

body {
  max-width: 60em;
  margin: 0 auto;
  padding: 2em 1em;
  color: var(--fg);
  background: var(--bg);
}

/* Block elements */

h1, h2, h3, h4, h5, h6 {
  margin-block: 0 1rem;
}

h1 { border-bottom: 2px solid currentColor; }
h2 { border-bottom: 1px solid currentColor; }

p {
  margin-block: 0 1rem;
}

blockquote {
  margin: 0;
  opacity: .5;
  border-left: 4px solid currentColor;
  padding-left: 1em;
}

/* Inline elements */

a {
  font-weight: bold;
  color: light-dark(var(--grey), var(--green));
  text-decoration: none;
  text-decoration-thickness: 2px;
  border-radius: 1px; /* This rounds the corners of the focus outline */
  outline-offset: 2px;
}

a:hover, a:active {
  text-decoration: underline;
  opacity: .9;
}

a:focus-within {
  outline: solid 3px var(--link-color);
}

a.anchor {
  opacity: 0;
}

*:hover > a.anchor,
*:focus-within > a.anchor {
  opacity: 1;
}

img,
svg,
video,
iframe {
  /*
    To make your element responsive while avoiding layout shift:
    a) set width and height attributes on the tag, or
    b) set width and aspect-ratio properties in CSS.
    (There are other more advanced options, but the above are the simplest best practice.)
    The following rules make (a) and (b) do the right thing.
  */
  max-width: 100%;
  height: auto;

  /* Removes a tiny bit of added space at the bottom of inline replaced content */
  vertical-align: middle;
}

video,
iframe {
  width: 100%;
}

/* Header */

header {
  display: flex;
  flex-flow: row wrap;
  align-items: start;
  justify-content: space-between;
  gap: 0 2em;
  margin-bottom: 1em;
}

.foc.title img {
  width: 100%;
  height: auto;
}

nav {
  display: grid;
  gap: .5em;
}

/* Assorted other styles */

.date { font-family: monospace; margin-right: 1.5em; color: #444; text-transform: uppercase; }
@media (prefers-color-scheme: dark) {.date {color: #98B2A9 }}
